1. SQL Database inclusion [PENDING]
    - Idea: Implement a data lake that allows future querying of used calculation parameters and outcomes (goal: use such data to backtest strategies, develop frameworks, etc.)
    - Implementation: SQLite, Python's sqlite3 lib, SQLAlchemy (ORM for schema & query management)
    - Future Improvement:
        - PostgreSQL (Supabase/ Heroku's free tier) - for scalable cloud
        - NoSQL (Google Firebase Firestone)

    1a. Database Schema [PENDING]
        - tables for CalculationInput and CalculationOutput

2. Option Valuation [PENDING]
    2a. Base Util [PENDING]
        - Idea: common implementation for code reusability and maintainability
        - Implementation: 
        - Future Improvement:

        2ai. Specifics [PENDING]
            - Base abstract class/ interface for child classes to implement or inherit

    2b. Binomial Model [PENDING]
        - Idea: Implement specific logic for Binomial model's formula
        - Implementation: 
        - Future Improvement:
    2c. Black Scholes Model [PENDING]
        - Idea: Implement specific logic for Black Scholes model's formula
        - Implementation: 
        - Future Improvement:

3. Tests [PENDING]
    - Idea: Validations, White box testing (Check against hand-calculated values), potentially db insertion/retrieval
    - Implementation: Python's pytest/ unittest
    - Future Improvement:

    3a. Unit Test [PENDING]
    3b. White box Testing [PENDING]
    3c. Back Testing against Alpaca api [PENDING]

4. Streamlit App [PENDING]
    - Idea: Main file for implementation of interactable "fullstack" software
    - Implementation: Python st software, 
    - Future Improvement: Interact with db to query/ visualize historical calculations

    4a. Specifics [PENDING]
    - UI components for input parameters, model type, valuation type [PENDING]
    - UI components for results [PENDING]
        - Numeric outputs [PENDING]
        - Charts/ Graphs for price changes/ shocks [PENDING]

5. Requirement Specifications [PENDING]

6. Documentation (i.e Javadocs) [PENDING]